---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import PostCard from "./PostCard.astro";
import { formatDate } from "../utils/index";

interface PostByYears {
  [year: string]: CollectionEntry<"posts">[];
}

const posts = await getCollection("posts");
const sortedPosts: PostByYears = {};
posts.forEach((post: CollectionEntry<"props">) => {
  const [year] = formatDate(post.data.date);
  if (sortedPosts[year]) {
    sortedPosts[year].push(post);
  } else {
    sortedPosts[year] = [post];
  }
});

const sortedPostsByYear = Object.fromEntries(
  Object.entries(sortedPosts).sort(
    ([yearA], [yearB]) => parseInt(yearB) - parseInt(yearA)
  )
);
---

<div class="mt-5 flex flex-col space-y-5">
  {
    Object.entries(sortedPostsByYear)
      .reverse()
      .map(([year, yearPosts]) => (
        <div>
          <h2 class="text-2xl flex font-semibold">{year}</h2>
          {yearPosts.map((post) => (
            <PostCard
              slug={post.slug}
              title={post.data.title}
              date={post.data.date}
            />
          ))}
        </div>
      ))
  }
</div>
